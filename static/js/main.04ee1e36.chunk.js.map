{"version":3,"sources":["components/ToolTabs/ToolTabs.module.scss","components/Header/Header.module.scss","components/Footer/Footer.module.scss","components/UI/Select/Select.module.scss","components/Header/Header.js","components/Footer/Footer.js","assets/icons/swap.svg","components/UI/Select/Select.js","components/ToolTabs/ToolTabs.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","classes","header","Footer","footer","Select","props","name","value","onChange","tab","units","map","unit","ToolTabs","toolTabs","useState","inputValue","setInputValue","Number","result","setResult","inputSelect","setInputSelect","outputSelect","setOutputSelect","changeValueHandler","event","target","changeTabHandler","selectedTab","hasAttribute","selectedTabText","textContent","changeInputValueHandler","selectedValue","changeOutputValueHandler","swapUnitSelectHandler","useEffect","mileMultiplier","yardMultiplier","footMultiplier","inchMultiplier","tonneMultiplier","stoneMultiplier","poundMultiplier","ounceMultiplier","toFixed","Tabs","onClick","title","id","TabPanel","type","aria-label","src","swap","alt","width","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04ee1e36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversion-container\":\"ToolTabs_conversion-container__1Hus6\",\"conversion-control\":\"ToolTabs_conversion-control__3g_8A\",\"conversion-output\":\"ToolTabs_conversion-output__2W4n1\",\"conversion-input\":\"ToolTabs_conversion-input__3HqEN\",\"Tabs\":\"ToolTabs_Tabs__2LS3g\",\"TabPanel\":\"ToolTabs_TabPanel__WNKfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conversion-select\":\"Select_conversion-select__-_qWe\"};","import React from 'react';\n\nimport classes from './Header.module.scss';\n\nconst Header = () => {\n  return (\n    <header className={classes.header}>\n      <h1>Conversion Tool</h1>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport classes from './Footer.module.scss';\n\nconst Footer = () => {\n  return (\n    <footer className={classes.footer}>\n      <span>Â© Copyright 2021. <strong>\"TBM85\"</strong></span>\n      <span> All rights reserved</span> \n    </footer>\n  );\n};\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/swap.381342b1.svg\";","import React from 'react';\n\nimport classes from './Select.module.scss';\n\nconst Select = (props) => {\n  return (\n    <div className={classes[\"conversion-select\"]}>\n      <select\n        name=\"select\"\n        value={props.value}\n        onChange={props.onChange}\n      >\n        {props.tab.units.map((unit) => (\n          <option key={unit} value={unit}>{unit}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;","import React, { useEffect, useState } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./ToolTabs.module.scss\";\nimport swap from \"../../assets/icons/swap.svg\";\nimport Select from \"../UI/Select/Select\";\n\nconst ToolTabs = (props) => {\n  const { toolTabs } = props;\n\n  const [inputValue, setInputValue] = useState(1);\n  const [result, setResult] = useState(Number);\n\n  const [inputSelect, setInputSelect] = useState(\"kilometer\");\n  const [outputSelect, setOutputSelect] = useState(\"meter\");\n\n  // Changes the value when a new one is entered\n  const changeValueHandler = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  // Define the default values when you click on a tab\n  const changeTabHandler = (event) => {\n    let selectedTab = event.target.hasAttribute(\"aria-selected\");\n    let selectedTabText = event.target.textContent;\n\n    if (selectedTab) {\n      if (selectedTabText === \"Length\") {\n        setInputSelect(toolTabs[0].units[0]);\n        setOutputSelect(toolTabs[0].units[1]);\n      } else if (selectedTabText === \"Temperature\") {\n        setInputSelect(toolTabs[1].units[0]);\n        setOutputSelect(toolTabs[1].units[1]);\n      } else if (selectedTabText === \"Weight\") {\n        setInputSelect(toolTabs[2].units[0]);\n        setOutputSelect(toolTabs[2].units[1]);\n      }\n    }\n  };\n\n  // Change the selected value when you click on another option\n  const changeInputValueHandler = (event) => {\n    let selectedValue = event.target.value;\n\n    setInputSelect(selectedValue);\n  };\n\n  // Change the selected value when you click on another option\n  const changeOutputValueHandler = (event) => {\n    let selectedValue = event.target.value;\n\n    setOutputSelect(selectedValue);\n  };\n\n  // Swap selection units\n  const swapUnitSelectHandler = () => {\n    setInputSelect(outputSelect);\n    setOutputSelect(inputSelect);\n  };\n\n  useEffect(() => {\n    const mileMultiplier = 1.609344;\n    const yardMultiplier = mileMultiplier / 1760;\n    const footMultiplier = yardMultiplier / 3;\n    const inchMultiplier = footMultiplier / 12;\n\n    const tonneMultiplier = 1000;\n    const stoneMultiplier = 6.35029;\n    const poundMultiplier = stoneMultiplier / 14;\n    const ounceMultiplier = poundMultiplier / 16;\n\n    // Displays the same output value when both selected options are equal\n    if (inputSelect === outputSelect) {\n      setResult(inputValue);\n    }\n\n    // Display the output values for the combination of the following units:\n    // kilometer, meter, millimeter, kilogram, gram, and milligram\n    if (inputSelect === \"kilometer\" || inputSelect === \"kilogram\") {\n      if (outputSelect === \"meter\" || outputSelect === \"gram\") {\n        setResult(inputValue * 1000);\n      } else if (\n        outputSelect === \"millimeter\" ||\n        outputSelect === \"milligram\"\n      ) {\n        setResult(inputValue * 1000000);\n      }\n    } else if (inputSelect === \"meter\" || inputSelect === \"gram\") {\n      if (outputSelect === \"kilometer\" || outputSelect === \"kilogram\") {\n        setResult(inputValue / 1000);\n      } else if (\n        outputSelect === \"millimeter\" ||\n        outputSelect === \"milligram\"\n      ) {\n        setResult(inputValue * 1000);\n      }\n    } else if (inputSelect === \"millimeter\" || inputSelect === \"milligram\") {\n      if (outputSelect === \"kilometer\" || outputSelect === \"kilogram\") {\n        setResult(inputValue / 1000000);\n      } else if (outputSelect === \"meter\" || outputSelect === \"gram\") {\n        setResult(inputValue / 1000);\n      }\n    }\n\n    // Display the output values for temperature\n    if (inputSelect === \"celsius\" && outputSelect === \"fahrenheit\") {\n      setResult(+((inputValue * (9 / 5) + 32).toFixed(2)));\n    } else if (inputSelect === \"fahrenheit\" && outputSelect === \"celsius\") {\n      setResult(+((inputValue - 32) * (5 / 9)).toFixed(2));\n    }\n\n    // Display the output values for length\n    if (inputSelect === \"kilometer\") {\n      if (outputSelect === \"centimeter\") {\n        setResult(inputValue * 100000);\n      } else if (outputSelect === \"mile\") {\n        setResult(inputValue / mileMultiplier);\n      } else if (outputSelect === \"yard\") {\n        setResult(inputValue / yardMultiplier);\n      } else if (outputSelect === \"foot\") {\n        setResult(inputValue / footMultiplier);\n      } else if (outputSelect === \"inch\") {\n        setResult(inputValue / inchMultiplier);\n      }\n    } else if (inputSelect === \"meter\") {\n      if (outputSelect === \"centimeter\") {\n        setResult(inputValue * 100);\n      } else if (outputSelect === \"mile\") {\n        setResult(inputValue / mileMultiplier / 1000);\n      } else if (outputSelect === \"yard\") {\n        setResult(inputValue / yardMultiplier / 1000);\n      } else if (outputSelect === \"foot\") {\n        setResult(inputValue / footMultiplier / 1000);\n      } else if (outputSelect === \"inch\") {\n        setResult(inputValue / inchMultiplier / 1000);\n      }\n    } else if (inputSelect === \"centimeter\") {\n      if (outputSelect === \"kilometer\") {\n        setResult(inputValue / 100000);\n      } else if (outputSelect === \"meter\") {\n        setResult(inputValue / 100);\n      } else if (outputSelect === \"millimeter\") {\n        setResult(inputValue * 10);\n      } else if (outputSelect === \"mile\") {\n        setResult(inputValue / mileMultiplier / 100000);\n      } else if (outputSelect === \"yard\") {\n        setResult(inputValue / yardMultiplier / 100000);\n      } else if (outputSelect === \"foot\") {\n        setResult(inputValue / footMultiplier / 100000);\n      } else if (outputSelect === \"inch\") {\n        setResult(inputValue / inchMultiplier / 100000);\n      }\n    } else if (inputSelect === \"millimeter\") {\n      if (outputSelect === \"centimeter\") {\n        setResult(inputValue / 10);\n      } else if (outputSelect === \"mile\") {\n        setResult(inputValue / mileMultiplier / 1000000);\n      } else if (outputSelect === \"yard\") {\n        setResult(inputValue / yardMultiplier / 1000000);\n      } else if (outputSelect === \"foot\") {\n        setResult(inputValue / footMultiplier / 1000000);\n      } else if (outputSelect === \"inch\") {\n        setResult(inputValue / inchMultiplier / 1000000);\n      }\n    } else if (inputSelect === \"mile\") {\n      if (outputSelect === \"kilometer\") {\n        setResult(inputValue * mileMultiplier);\n      } else if (outputSelect === \"meter\") {\n        setResult(inputValue * mileMultiplier * 1000);\n      } else if (outputSelect === \"centimeter\") {\n        setResult(inputValue * mileMultiplier * 100000);\n      } else if (outputSelect === \"millimeter\") {\n        setResult(inputValue * mileMultiplier * 1000000);\n      } else if (outputSelect === \"yard\") {\n        setResult((inputValue * mileMultiplier) / yardMultiplier);\n      } else if (outputSelect === \"foot\") {\n        setResult((inputValue * mileMultiplier) / footMultiplier);\n      } else if (outputSelect === \"inch\") {\n        setResult((inputValue * mileMultiplier) / inchMultiplier);\n      }\n    } else if (inputSelect === \"yard\") {\n      if (outputSelect === \"kilometer\") {\n        setResult(inputValue * yardMultiplier);\n      } else if (outputSelect === \"meter\") {\n        setResult(inputValue * yardMultiplier * 1000);\n      } else if (outputSelect === \"centimeter\") {\n        setResult(inputValue * yardMultiplier * 100000);\n      } else if (outputSelect === \"millimeter\") {\n        setResult(inputValue * yardMultiplier * 1000000);\n      } else if (outputSelect === \"mile\") {\n        setResult(inputValue / (mileMultiplier / yardMultiplier));\n      } else if (outputSelect === \"foot\") {\n        setResult(inputValue * (yardMultiplier / footMultiplier));\n      } else if (outputSelect === \"inch\") {\n        setResult(inputValue * (yardMultiplier / inchMultiplier));\n      }\n    } else if (inputSelect === \"foot\") {\n      if (outputSelect === \"kilometer\") {\n        setResult(inputValue * footMultiplier);\n      } else if (outputSelect === \"meter\") {\n        setResult(inputValue * footMultiplier * 1000);\n      } else if (outputSelect === \"centimeter\") {\n        setResult(inputValue * footMultiplier * 100000);\n      } else if (outputSelect === \"millimeter\") {\n        setResult(inputValue * footMultiplier * 1000000);\n      } else if (outputSelect === \"mile\") {\n        setResult(inputValue / (mileMultiplier / footMultiplier));\n      } else if (outputSelect === \"yard\") {\n        setResult(inputValue / (yardMultiplier / footMultiplier));\n      } else if (outputSelect === \"inch\") {\n        setResult(inputValue * (footMultiplier / inchMultiplier));\n      }\n    } else if (inputSelect === \"inch\") {\n      if (outputSelect === \"kilometer\") {\n        setResult(inputValue * inchMultiplier);\n      } else if (outputSelect === \"meter\") {\n        setResult(inputValue * inchMultiplier * 1000);\n      } else if (outputSelect === \"centimeter\") {\n        setResult(inputValue * inchMultiplier * 100000);\n      } else if (outputSelect === \"millimeter\") {\n        setResult(inputValue * inchMultiplier * 1000000);\n      } else if (outputSelect === \"mile\") {\n        setResult(inputValue / (mileMultiplier / inchMultiplier));\n      } else if (outputSelect === \"yard\") {\n        setResult(inputValue / (yardMultiplier / inchMultiplier));\n      } else if (outputSelect === \"foot\") {\n        setResult(inputValue / (footMultiplier / inchMultiplier));\n      }\n    }\n\n    // Display the output values for weight\n    if (inputSelect === \"kilogram\") {\n      if (outputSelect === \"tonne\") {\n        setResult(inputValue / tonneMultiplier);\n      } else if (outputSelect === \"stone\") {\n        setResult(inputValue / stoneMultiplier);\n      } else if (outputSelect === \"pound\") {\n        setResult(inputValue / poundMultiplier);\n      } else if (outputSelect === \"ounce\") {\n        setResult(inputValue / ounceMultiplier);\n      }\n    } else if (inputSelect === \"gram\") {\n      if (outputSelect === \"tonne\") {\n        setResult(inputValue / (tonneMultiplier * 1000));\n      } else if (outputSelect === \"stone\") {\n        setResult(inputValue / (stoneMultiplier * 1000));\n      } else if (outputSelect === \"pound\") {\n        setResult(inputValue / (poundMultiplier * 1000));\n      } else if (outputSelect === \"ounce\") {\n        setResult(inputValue / (ounceMultiplier * 1000));\n      }\n    } else if (inputSelect === \"milligram\") {\n      if (outputSelect === \"tonne\") {\n        setResult(inputValue / (tonneMultiplier * 1000000));\n      } else if (outputSelect === \"stone\") {\n        setResult(inputValue / (stoneMultiplier * 1000000));\n      } else if (outputSelect === \"pound\") {\n        setResult(inputValue / (poundMultiplier * 1000000));\n      } else if (outputSelect === \"ounce\") {\n        setResult(inputValue / (ounceMultiplier * 1000000));\n      }\n    } else if (inputSelect === \"tonne\") {\n      if (outputSelect === \"kilogram\") {\n        setResult(inputValue * tonneMultiplier);\n      } else if (outputSelect === \"gram\") {\n        setResult(inputValue * tonneMultiplier * 1000);\n      } else if (outputSelect === \"milligram\") {\n        setResult(inputValue * tonneMultiplier * 1000000);\n      } else if (outputSelect === \"stone\") {\n        setResult((inputValue / stoneMultiplier) * 1000);\n      } else if (outputSelect === \"pound\") {\n        setResult((inputValue / poundMultiplier) * 1000);\n      } else if (outputSelect === \"ounce\") {\n        setResult((inputValue / ounceMultiplier) * 1000);\n      }\n    } else if (inputSelect === \"stone\") {\n      if (outputSelect === \"kilogram\") {\n        setResult(inputValue * stoneMultiplier);\n      } else if (outputSelect === \"gram\") {\n        setResult(inputValue * stoneMultiplier * 1000);\n      } else if (outputSelect === \"milligram\") {\n        setResult(inputValue * stoneMultiplier * 1000000);\n      } else if (outputSelect === \"tonne\") {\n        setResult((inputValue * stoneMultiplier) / 1000);\n      } else if (outputSelect === \"pound\") {\n        setResult(inputValue * (stoneMultiplier / poundMultiplier));\n      } else if (outputSelect === \"ounce\") {\n        setResult(inputValue * (stoneMultiplier / ounceMultiplier));\n      }\n    } else if (inputSelect === \"pound\") {\n      if (outputSelect === \"kilogram\") {\n        setResult(inputValue * poundMultiplier);\n      } else if (outputSelect === \"gram\") {\n        setResult(inputValue * poundMultiplier * 1000);\n      } else if (outputSelect === \"milligram\") {\n        setResult(inputValue * poundMultiplier * 1000000);\n      } else if (outputSelect === \"tonne\") {\n        setResult((inputValue * poundMultiplier) / 1000);\n      } else if (outputSelect === \"stone\") {\n        setResult(inputValue / (stoneMultiplier / poundMultiplier));\n      } else if (outputSelect === \"ounce\") {\n        setResult(inputValue * (poundMultiplier / ounceMultiplier));\n      }\n    } else if (inputSelect === \"ounce\") {\n      if (outputSelect === \"kilogram\") {\n        setResult(inputValue * ounceMultiplier);\n      } else if (outputSelect === \"gram\") {\n        setResult(inputValue * ounceMultiplier * 1000);\n      } else if (outputSelect === \"milligram\") {\n        setResult(inputValue * ounceMultiplier * 1000000);\n      } else if (outputSelect === \"tonne\") {\n        setResult((inputValue * ounceMultiplier) / 1000);\n      } else if (outputSelect === \"stone\") {\n        setResult(inputValue / (stoneMultiplier / ounceMultiplier));\n      } else if (outputSelect === \"pound\") {\n        setResult(inputValue / (poundMultiplier / ounceMultiplier));\n      }\n    }\n  }, [inputSelect, inputValue, outputSelect]);\n\n  return (\n    <Tabs className={classes.Tabs}>\n      <TabList>\n        {toolTabs.map((tab) => (\n          <Tab key={tab.id} onClick={changeTabHandler}>\n            {tab.title}\n          </Tab>\n        ))}\n      </TabList>\n\n      {toolTabs.map((tab) => (\n        <TabPanel key={tab.id} className={classes.TabPanel}>\n          <div className={classes[\"conversion-container\"]}>\n            <div className={classes[\"conversion-control\"]}>\n              <input\n                type=\"number\"\n                className={classes[\"conversion-input\"]}\n                aria-label=\"number input\"\n                value={inputValue}\n                onChange={changeValueHandler}\n              />\n              <Select\n                tab={tab}\n                className={classes[\"conversion-select\"]}\n                value={inputSelect}\n                onChange={changeInputValueHandler}\n              />\n            </div>\n            <button\n              type=\"button\"\n              onClick={swapUnitSelectHandler}\n              aria-label=\"Swap Units\"\n            >\n              <img src={swap} alt=\"swap\" width=\"30px\" height=\"30px\" />\n            </button>\n            <div className={classes[\"conversion-control\"]}>\n              <div className={classes[\"conversion-output\"]}>{result}</div>\n              <Select\n                tab={tab}\n                className={classes[\"conversion-select\"]}\n                value={outputSelect}\n                onChange={changeOutputValueHandler}\n              />\n            </div>\n          </div>\n        </TabPanel>\n      ))}\n    </Tabs>\n  );\n};\n\nexport default ToolTabs;\n\nToolTabs.propTypes = {\n  inputValue: PropTypes.number,\n  result: PropTypes.number,\n  inputSelect: PropTypes.string,\n  outputSelect: PropTypes.string\n};\n","import PropTypes from \"prop-types\";\n\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport ToolTabs from './components/ToolTabs/ToolTabs';\n\nconst toolTabs = [\n  {\n    id: 1,\n    title: \"Length\",\n    units: [\n      \"kilometer\",\n      \"meter\",\n      \"centimeter\",\n      \"millimeter\",\n      \"mile\",\n      \"yard\",\n      \"foot\",\n      \"inch\",\n    ],\n  },\n  { id: 2, title: \"Temperature\", units: [\"celsius\", \"fahrenheit\"] },\n  {\n    id: 3,\n    title: \"Weight\",\n    units: [\n      \"kilogram\",\n      \"gram\",\n      \"milligram\",\n      \"tonne\",\n      \"stone\",\n      \"pound\",\n      \"ounce\",\n    ],\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ToolTabs toolTabs={toolTabs} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\nApp.propTypes = {\n  toolTabs: PropTypes.object\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}